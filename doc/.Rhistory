mm <- colMeans(rtn[i:(i+wid_len-1),])
}
wid_len <- 5*252
period <- length(rtn)-wid_len
for (i in 1:period){
mm <- colMeans(rtn[i:(i+wid_len-1),])
}
for (i in 1:period){
mm[i] <- colMeans(rtn[i:(i+wid_len-1),])
}
View(mm)
i=1
mm <- colMeans(rtn[i:(i+wid_len-1),])
View(mm)
t(mm)
mm <- matrix(0,nrow = period,ncol=2)
mm <- matrix(0,nrow = period,ncol=2)
mm[1,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
View(mm)
length(prices)
ncol(prices)
mm[1,] <- t(apply(rtn[i:(i+wid_len-1),],2,var))
View(mm)
length(rtn)
ncol(rtn)
winEstGBM2 <- function(prices,dRtn,year){
win_len <- year*252
rtn <- -diff(log(prices),dRtn)                                           # log returns
rtnsq <- rtn^2                                                           # square of log returns
period <- length(rtn)-wid_len                                            # period for loop
datadt <- dRtn/252
mu_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                     # mean of log returns
var_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                    # standard deviation of log returns
mu_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                     # estimates for mu of price
sigma_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                  # estimates for sigma of price
rho <- NA
for (i in 1:period){
mu_bar[i,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
var_bar[i,] <- t(apply(rtn[i:(i+wid_len-1),],2,var))
sigma_gbm[i,] <- sqrt(var_bar[i,]/(dRtn/252))
mu_gbm[i,] <- mu_bar[i,]/(dRtn/252) + (sigma_gbm[i,]^2)/2
}
if (ncol==2){
for (i in 1:period){
rho[i] <- cov(rtn[,1],rtn[,2])/datadt/(sigma_gbm[,1]*sigma_gbm[,2])
}
}else{
rho[i] <- NA
}
}
prices <- comb.col(stock1,stock2)
winEstGBM2(prices,dRtn = 5,year = 5)
rtn[i:(i+wid_len-1),]
colMeans(rtn[i:(i+wid_len-1),])
i
t(colMeans(rtn[i:(i+wid_len-1),]))
mm <- winEstGBM2(prices,dRtn = 5,year = 5)
win_len <- year*252
rtn <- -diff(log(prices),dRtn)                                           # log returns
rtnsq <- rtn^2                                                           # square of log returns
period <- length(rtn)-wid_len                                            # period for loop
datadt <- dRtn/252
for (i in 1:period){
mu_bar[i,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
}
mu_bar <- matrix(NA,nrow = period,ncol=ncol(prices))
for (i in 1:period){
mu_bar[i,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
}
t(colMeans(rtn[i:(i+wid_len-1),]))
rtn[i:(i+wid_len-1),]
(i+wid_len-1)
i
wid_len
period
length(rtn)-wid_len
length(rtn)
16830+5*252
7787+5*252-1
length(rtn)
for (i in 1:period){
mu_bar[i,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
}
i
rtn[i:(i+wid_len-1),]
i:(i+wid_len-1)
length(i:(i+wid_len-1))
i <- 7788
rtn[i:(i+wid_len-1),]
i <- 7787
rtn[i:(i+wid_len-1),]
i <- 7786
rtn[i:(i+wid_len-1),]
rtn <- -diff(log(prices),dRtn)                                           # log returns
length(rtn)
winEstGBM2 <- function(prices,dRtn,year){
win_len <- year*252
rtn <- -diff(log(prices),dRtn)                                           # log returns
rtnsq <- rtn^2                                                           # square of log returns
period <- nrow(rtn)-wid_len                                            # period for loop
datadt <- dRtn/252
mu_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                     # mean of log returns
var_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                    # standard deviation of log returns
mu_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                     # estimates for mu of price
sigma_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                  # estimates for sigma of price
rho <- NA
for (i in 1:period){
mu_bar[i,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
var_bar[i,] <- t(apply(rtn[i:(i+wid_len-1),],2,var))
sigma_gbm[i,] <- sqrt(var_bar[i,]/(dRtn/252))
mu_gbm[i,] <- mu_bar[i,]/(dRtn/252) + (sigma_gbm[i,]^2)/2
}
if (ncol==2){
for (i in 1:period){
rho[i] <- cov(rtn[,1],rtn[,2])/datadt/(sigma_gbm[,1]*sigma_gbm[,2])
}
}else{
rho[i] <- NA
}
}
mm <- winEstGBM2(prices,dRtn = 5,year = 5)
winEstGBM2 <- function(prices,dRtn,year){
win_len <- year*252
rtn <- -diff(log(prices),dRtn)                                           # log returns
rtnsq <- rtn^2                                                           # square of log returns
period <- nrow(rtn)-wid_len                                            # period for loop
datadt <- dRtn/252
mu_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                     # mean of log returns
var_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                    # standard deviation of log returns
mu_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                     # estimates for mu of price
sigma_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                  # estimates for sigma of price
rho <- NA
for (i in 1:period){
mu_bar[i,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
var_bar[i,] <- t(apply(rtn[i:(i+wid_len-1),],2,var))
sigma_gbm[i,] <- sqrt(var_bar[i,]/(dRtn/252))
mu_gbm[i,] <- mu_bar[i,]/(dRtn/252) + (sigma_gbm[i,]^2)/2
}
if (ncol(prices)==2){
for (i in 1:period){
rho[i] <- cov(rtn[,1],rtn[,2])/datadt/(sigma_gbm[,1]*sigma_gbm[,2])
}
}else{
rho[i] <- NA
}
}
mm <- winEstGBM2(prices,dRtn = 5,year = 5)
View(mm)
warnings()
mm <- cov(rtn[,1],rtn[,2])/datadt/(sigma_gbm[,1]*sigma_gbm[,2])
for (i in 1:period){
mu_bar[i,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
var_bar[i,] <- t(apply(rtn[i:(i+wid_len-1),],2,var))
sigma_gbm[i,] <- sqrt(var_bar[i,]/(dRtn/252))
mu_gbm[i,] <- mu_bar[i,]/(dRtn/252) + (sigma_gbm[i,]^2)/2
}
win_len <- year*252
rtn <- -diff(log(prices),dRtn)                                           # log returns
rtnsq <- rtn^2                                                           # square of log returns
period <- nrow(rtn)-wid_len                                            # period for loop
datadt <- dRtn/252
mu_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                     # mean of log returns
var_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                    # standard deviation of log returns
mu_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                     # estimates for mu of price
sigma_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                  # estimates for sigma of price
rho <- NA
for (i in 1:period){
mu_bar[i,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
var_bar[i,] <- t(apply(rtn[i:(i+wid_len-1),],2,var))
sigma_gbm[i,] <- sqrt(var_bar[i,]/(dRtn/252))
mu_gbm[i,] <- mu_bar[i,]/(dRtn/252) + (sigma_gbm[i,]^2)/2
}
mm <- cov(rtn[,1],rtn[,2])/datadt/(sigma_gbm[,1]*sigma_gbm[,2])
View(mm)
length(mm)
winEstGBM2 <- function(prices,dRtn,year){
win_len <- year*252
rtn <- -diff(log(prices),dRtn)                                           # log returns
rtnsq <- rtn^2                                                           # square of log returns
period <- nrow(rtn)-wid_len                                            # period for loop
datadt <- dRtn/252
mu_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                     # mean of log returns
var_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                    # standard deviation of log returns
mu_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                     # estimates for mu of price
sigma_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                  # estimates for sigma of price
for (i in 1:period){
mu_bar[i,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
var_bar[i,] <- t(apply(rtn[i:(i+wid_len-1),],2,var))
sigma_gbm[i,] <- sqrt(var_bar[i,]/(dRtn/252))
mu_gbm[i,] <- mu_bar[i,]/(dRtn/252) + (sigma_gbm[i,]^2)/2
}
if (ncol(prices)==2){
rho <- cov(rtn[,1],rtn[,2])/datadt/(sigma_gbm[,1]*sigma_gbm[,2])
}
}else{
rho <- NA
}
}
winEstGBM2 <- function(prices,dRtn,year){
win_len <- year*252
rtn <- -diff(log(prices),dRtn)                                           # log returns
rtnsq <- rtn^2                                                           # square of log returns
period <- nrow(rtn)-wid_len                                            # period for loop
datadt <- dRtn/252
mu_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                     # mean of log returns
var_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                    # standard deviation of log returns
mu_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                     # estimates for mu of price
sigma_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                  # estimates for sigma of price
for (i in 1:period){
mu_bar[i,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
var_bar[i,] <- t(apply(rtn[i:(i+wid_len-1),],2,var))
sigma_gbm[i,] <- sqrt(var_bar[i,]/(dRtn/252))
mu_gbm[i,] <- mu_bar[i,]/(dRtn/252) + (sigma_gbm[i,]^2)/2
}
if (ncol(prices)==2){
rho <- cov(rtn[,1],rtn[,2])/datadt/(sigma_gbm[,1]*sigma_gbm[,2])
}else{
rho <- NA
}
}
mm <- winEstGBM2(prices,dRtn = 5,year = 5)
View(mm)
#Inputs:
# n = n steps of size n*dt year
# dt = returnPeriod/252 (eg,1/252,5/252)
#Returns: k sample paths for a pair of brownian motions, N steps of size DT years
library(mvtnorm)
winEstGBM2 <- function(prices,dRtn,year){
win_len <- year*252
rtn <- -diff(log(prices),dRtn)                                           # log returns
rtnsq <- rtn^2                                                           # square of log returns
period <- nrow(rtn)-wid_len                                            # period for loop
datadt <- dRtn/252
mu_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                     # mean of log returns
var_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                    # standard deviation of log returns
mu_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                     # estimates for mu of price
sigma_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                  # estimates for sigma of price
for (i in 1:period){
mu_bar[i,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
var_bar[i,] <- t(apply(rtn[i:(i+wid_len-1),],2,var))
sigma_gbm[i,] <- sqrt(var_bar[i,]/(dRtn/252))
mu_gbm[i,] <- mu_bar[i,]/(dRtn/252) + (sigma_gbm[i,]^2)/2
}
if (ncol(prices)==2){
rho <- cov(rtn[,1],rtn[,2])/datadt/(sigma_gbm[,1]*sigma_gbm[,2])
}else{
rho <- NA
}
return(rho)
}
mm <- winEstGBM2(prices,dRtn = 5,year = 5)
View(mm)
test <- t(mm) %*% mm
View(test)
?cov2cor
a <- cov2cor(mm)
Sigma <- matrix(c(10,4,4,2),2,2)
mvrnorm(n=1,c(0,0),Sigma)
library(MASS)
MM <- mvrnorm(n=1,c(0,0),Sigma)
View(MM)
Sigma =matrix(c(1,mm,mm,1),2,2)
View(Sigma)
View(mm)
Sigma <- matrix(c(10,3,3,2),2,2)
View(Sigma)
Sigma <- NA
Sigma [1] <- matrix(c(10,3,3,2),2,2)
Sigma
?rep
winEstGBM2 <- function(prices,dRtn,year){
win_len <- year*252
rtn <- -diff(log(prices),dRtn)                                           # log returns
rtnsq <- rtn^2                                                           # square of log returns
period <- nrow(rtn)-wid_len                                            # period for loop
datadt <- dRtn/252
mu_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                     # mean of log returns
var_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                    # standard deviation of log returns
mu_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                     # estimates for mu of price
sigma_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                  # estimates for sigma of price
for (i in 1:period){
mu_bar[i,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
var_bar[i,] <- t(apply(rtn[i:(i+wid_len-1),],2,var))
sigma_gbm[i,] <- sqrt(var_bar[i,]/(dRtn/252))
mu_gbm[i,] <- mu_bar[i,]/(dRtn/252) + (sigma_gbm[i,]^2)/2
}
if (ncol(prices)==2){
rho <- cov(rtn[,1],rtn[,2])/datadt/(sigma_gbm[,1]*sigma_gbm[,2])
}else{
rho <- NA
}
return(rho)
}
mu_gbm
View(mu_gbm)
w <- function(rho,mu){
sigma <- matrix(c(1,rho,rho,1),2,2)
bm <- mvrnorm(n=1,mu,Sigma = sigma)
return(bm)
}
w_p <- mapply(w,rho,mu_gbm)
Sigma <- matrix(c(10,3,3,2),2,2)
mm <- mvrnorm(n = 1, rep(0, 2), Sigma)
View(mm)
mm <- mvrnorm(n = 2, rep(0, 2), Sigma)
View(mm)
rho[1]
View(rho)
winEstGBM2 <- function(prices,dRtn,year){
win_len <- year*252
rtn <- -diff(log(prices),dRtn)                                           # log returns
rtnsq <- rtn^2                                                           # square of log returns
period <- nrow(rtn)-wid_len                                            # period for loop
datadt <- dRtn/252
mu_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                     # mean of log returns
var_bar <- matrix(NA,nrow = period,ncol=ncol(prices))                    # standard deviation of log returns
mu_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                     # estimates for mu of price
sigma_gbm <- matrix(NA,nrow = period,ncol=ncol(prices))                  # estimates for sigma of price
for (i in 1:period){
mu_bar[i,] <- t(colMeans(rtn[i:(i+wid_len-1),]))
var_bar[i,] <- t(apply(rtn[i:(i+wid_len-1),],2,var))
sigma_gbm[i,] <- sqrt(var_bar[i,]/(dRtn/252))
mu_gbm[i,] <- mu_bar[i,]/(dRtn/252) + (sigma_gbm[i,]^2)/2
}
if (ncol(prices)==2){
rho <- cov(rtn[,1],rtn[,2])/datadt/(sigma_gbm[,1]*sigma_gbm[,2])
}else{
rho <- NA
}
return(rho)
}
mm <- winEstGBM2(prices,dRtn = 5,year = 5)
rho[1]
w_p <- mapply(w,mm,mu_gbm)
mm[1]
mu_gbm[1]
mu_gbm[1,]
mm <- w(rho[1],mu_gbm[1,])
w <- function(rho,mu){
sigma <- matrix(c(1,rho,rho,1),2,2)
bm <- mvrnorm(n=1,mu,Sigma = sigma)
return(bm)
}
ll <- w(rho[1],mu_gbm[1,])
sigma <- matrix(c(1,mm[1],mm[1],1),2,2)
View(sigma)
bm <- mvrnorm(n=1,mu_gbm,Sigma = sigma)
bm <- mvrnorm(n=1,mu_gbm[1,],Sigma = sigma)
View(bm)
?mvrnorm
bm[1]
View(mu_gbm[,1])
lm <- mapply(w,mm,mu_gbm)
lm <- mapply(w,mm,mu_gbm)
View(bm)
sigma <- list()
bm <- matrix(NA,nrow=2,ncol=nrow(rho))
for(i in 1:nrow(rho)){
sigma[[i]] <- matrix(c(1,rho[i],rho[i],1),2,2)
bm[,i] <- mvrnorm(n=1,mu_gbm[i,],Sigma = sigma[[i]])
}
rho <- winEstGBM2(prices,dRtn = 5,year = 5)
sigma <- list()
bm <- matrix(NA,nrow=2,ncol=nrow(rho))
for(i in 1:nrow(rho)){
sigma[[i]] <- matrix(c(1,rho[i],rho[i],1),2,2)
bm[,i] <- mvrnorm(n=1,mu_gbm[i,],Sigma = sigma[[i]])
}
nrow(rho)
rho <- winEstGBM2(prices,dRtn = 5,year = 5)
length(rho)
sigma <- list()
bm <- matrix(NA,nrow=2,ncol=length(rho))
for(i in 1:length(rho)){
sigma[[i]] <- matrix(c(1,rho[i],rho[i],1),2,2)
bm[,i] <- mvrnorm(n=1,mu_gbm[i,],Sigma = sigma[[i]])
}
bm
View(bm)
bm1 <- t(bm)
View(bm1)
ll <- mvrnorm(n=1,mu_gbm[1,],Sigma = sigma[[1]])
View(ll)
View(t(ll))
ll <- mvrnorm(n=2,mu_gbm[1,],Sigma = sigma[[1]])
View(ll)
View(t(ll))
t(ll)[1]
t(ll)[,1]
bm <- matrix(NA,nrow=k,ncol=length(rho))
bm <- matrix(NA)
bm[,1]<- t(ll)[,1]
bm[,1]<- c(t(ll)[,1])
bm <- matrix(NA, nrow=2,ncol=2)
bm
bm[,1] <- t(ll)[,1]
bm
sigma <- list()
bm <- matrix(NA,nrow=k,ncol=length(rho))
for(i in 1:length(rho)){
sigma[[i]] <- matrix(c(1,rho[i],rho[i],1),2,2)
bm_1[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,1]
bm_2[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,2]
}
k <- 5
sigma <- list()
bm <- matrix(NA,nrow=k,ncol=length(rho))
for(i in 1:length(rho)){
sigma[[i]] <- matrix(c(1,rho[i],rho[i],1),2,2)
bm_1[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,1]
bm_2[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,2]
}
k <- 5
sigma <- list()
bm_1 <- matrix(NA,nrow=k,ncol=length(rho))
bm_2 <- matrix(NA,nrow=k,ncol=length(rho))
for(i in 1:length(rho)){
sigma[[i]] <- matrix(c(1,rho[i],rho[i],1),2,2)
bm_1[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,1]
bm_2[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,2]
}
bm[,2] <- t(ll)[,2]
ll <- mvrnorm(n=2,mu_gbm[1,],Sigma = sigma[[1]])
View(ll)
View(t(ll))
k <- 5
sigma <- list()
bm_1 <- matrix(NA,nrow=k,ncol=length(rho)*2)
bm_2 <- matrix(NA,nrow=k,ncol=length(rho)*2)
for(i in 1:length(rho)){
sigma[[i]] <- matrix(c(1,rho[i],rho[i],1),2,2)
bm_1[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,1]
bm_2[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,2]
}
ll <- t(mvrnorm(n=3,mu_gbm[1,],Sigma = sigma[[1]]))
View(ll)
ll <- mvrnorm(n=3,mu_gbm[1,],Sigma = sigma[[1]])
View(ll)
l1 <- mvrnorm(n=1,mu_gbm[1,],Sigma = sigma[[1]])
l2 <- mvrnorm(n=2,mu_gbm[1,],Sigma = sigma[[1]])
l3 <- mvrnorm(n=3,mu_gbm[1,],Sigma = sigma[[1]])
View(l1)
View(l2)
View(l3)
set.seed(123)
m <- nnorm(1)
m <- rnorm(1)
rnorm(1)
t(ll)[,1]
rnorm(1)
set.seed(123)
rnorm(1)
rnorm(1)
k <- 5
sigma <- list()
bm <- list()
# bm_1 <- matrix(NA,nrow=k,ncol=length(rho)*2)
# bm_2 <- matrix(NA,nrow=k,ncol=length(rho)*2)
for(i in 1:length(rho)){
sigma[[i]] <- matrix(c(1,rho[i],rho[i],1),2,2)
# bm_1[,i] <- mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]])[,1]
# bm_2[,i] <- mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]])[,2]
bm[[i]] <- mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]])
bm[[i]] <- mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]])
}
View(bm)
bm[[1]]
bm[[1]][,1]
ncol(bm)
str(bm)
length(bm)
View(bm)
w_1 <- matrix(NA,nrow=k,ncol = length(bm))
w_1[,i]<-bm[[1]][,1]
w_1
bm[,1]
bm[[]][,1]
View(bm)
View(bm_1)
s0 <- 10000
st1_bm <- matrix(0,nrow=k,ncol=ntrails)
ntrials <- length(rho)
st1_bm <- matrix(0,nrow=k,ncol=ntrails)
ntrails <- length(rho)
st1_bm <- matrix(0,nrow=k,ncol=ntrails)
st1_bm[,1] <- c(s0*exp(sigma_gbm[i,1]*bm[[1]][,1]+(mu_gbm[1,1]-sigma_gbm[1,1]^2/2)*dt))
(mu_gbm[1,1]-sigma_gbm[1,1]^2/2)
(mu_gbm[1,1]-sigma_gbm[1,1]^2/2)*dt)
(mu_gbm[1,1]-sigma_gbm[1,1]^2/2)*dt
dt<-5/252
(mu_gbm[1,1]-sigma_gbm[1,1]^2/2)*dt
sigma_gbm[i,1]*bm[[1]][,1]
i
st1_bm[,1] <- c(s0*exp(sigma_gbm[1,1]*bm[[1]][,1]+(mu_gbm[1,1]-sigma_gbm[1,1]^2/2)*dt))
st1_bm
View(st1_bm)
shares <- weight*v0/prices[1]
weight <- c(0.5,0.5)
shares <- weight*v0/prices[1]
shares[1]
View(shares)
prices <- comb.col(stock1,stock2)
prices[1]
prices[1,]
shares <- weight*v0/prices[1,]
View(shares)
v0 <- 10000
shares <- weight*v0/prices[1,]
View(shares)
class(shares)
shares[1]
shares[2]
