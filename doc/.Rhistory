t(ll)[,1]
bm <- matrix(NA,nrow=k,ncol=length(rho))
bm <- matrix(NA)
bm[,1]<- t(ll)[,1]
bm[,1]<- c(t(ll)[,1])
bm <- matrix(NA, nrow=2,ncol=2)
bm
bm[,1] <- t(ll)[,1]
bm
sigma <- list()
bm <- matrix(NA,nrow=k,ncol=length(rho))
for(i in 1:length(rho)){
sigma[[i]] <- matrix(c(1,rho[i],rho[i],1),2,2)
bm_1[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,1]
bm_2[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,2]
}
k <- 5
sigma <- list()
bm <- matrix(NA,nrow=k,ncol=length(rho))
for(i in 1:length(rho)){
sigma[[i]] <- matrix(c(1,rho[i],rho[i],1),2,2)
bm_1[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,1]
bm_2[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,2]
}
k <- 5
sigma <- list()
bm_1 <- matrix(NA,nrow=k,ncol=length(rho))
bm_2 <- matrix(NA,nrow=k,ncol=length(rho))
for(i in 1:length(rho)){
sigma[[i]] <- matrix(c(1,rho[i],rho[i],1),2,2)
bm_1[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,1]
bm_2[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,2]
}
bm[,2] <- t(ll)[,2]
ll <- mvrnorm(n=2,mu_gbm[1,],Sigma = sigma[[1]])
View(ll)
View(t(ll))
k <- 5
sigma <- list()
bm_1 <- matrix(NA,nrow=k,ncol=length(rho)*2)
bm_2 <- matrix(NA,nrow=k,ncol=length(rho)*2)
for(i in 1:length(rho)){
sigma[[i]] <- matrix(c(1,rho[i],rho[i],1),2,2)
bm_1[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,1]
bm_2[,i] <- t(mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]]))[,2]
}
ll <- t(mvrnorm(n=3,mu_gbm[1,],Sigma = sigma[[1]]))
View(ll)
ll <- mvrnorm(n=3,mu_gbm[1,],Sigma = sigma[[1]])
View(ll)
l1 <- mvrnorm(n=1,mu_gbm[1,],Sigma = sigma[[1]])
l2 <- mvrnorm(n=2,mu_gbm[1,],Sigma = sigma[[1]])
l3 <- mvrnorm(n=3,mu_gbm[1,],Sigma = sigma[[1]])
View(l1)
View(l2)
View(l3)
set.seed(123)
m <- nnorm(1)
m <- rnorm(1)
rnorm(1)
t(ll)[,1]
rnorm(1)
set.seed(123)
rnorm(1)
rnorm(1)
k <- 5
sigma <- list()
bm <- list()
# bm_1 <- matrix(NA,nrow=k,ncol=length(rho)*2)
# bm_2 <- matrix(NA,nrow=k,ncol=length(rho)*2)
for(i in 1:length(rho)){
sigma[[i]] <- matrix(c(1,rho[i],rho[i],1),2,2)
# bm_1[,i] <- mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]])[,1]
# bm_2[,i] <- mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]])[,2]
bm[[i]] <- mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]])
bm[[i]] <- mvrnorm(n=k,mu_gbm[i,],Sigma = sigma[[i]])
}
View(bm)
bm[[1]]
bm[[1]][,1]
ncol(bm)
str(bm)
length(bm)
View(bm)
w_1 <- matrix(NA,nrow=k,ncol = length(bm))
w_1[,i]<-bm[[1]][,1]
w_1
bm[,1]
bm[[]][,1]
View(bm)
View(bm_1)
s0 <- 10000
st1_bm <- matrix(0,nrow=k,ncol=ntrails)
ntrials <- length(rho)
st1_bm <- matrix(0,nrow=k,ncol=ntrails)
ntrails <- length(rho)
st1_bm <- matrix(0,nrow=k,ncol=ntrails)
st1_bm[,1] <- c(s0*exp(sigma_gbm[i,1]*bm[[1]][,1]+(mu_gbm[1,1]-sigma_gbm[1,1]^2/2)*dt))
(mu_gbm[1,1]-sigma_gbm[1,1]^2/2)
(mu_gbm[1,1]-sigma_gbm[1,1]^2/2)*dt)
(mu_gbm[1,1]-sigma_gbm[1,1]^2/2)*dt
dt<-5/252
(mu_gbm[1,1]-sigma_gbm[1,1]^2/2)*dt
sigma_gbm[i,1]*bm[[1]][,1]
i
st1_bm[,1] <- c(s0*exp(sigma_gbm[1,1]*bm[[1]][,1]+(mu_gbm[1,1]-sigma_gbm[1,1]^2/2)*dt))
st1_bm
View(st1_bm)
shares <- weight*v0/prices[1]
weight <- c(0.5,0.5)
shares <- weight*v0/prices[1]
shares[1]
View(shares)
prices <- comb.col(stock1,stock2)
prices[1]
prices[1,]
shares <- weight*v0/prices[1,]
View(shares)
v0 <- 10000
shares <- weight*v0/prices[1,]
View(shares)
class(shares)
shares[1]
shares[2]
plotGraph(Hvar,XOM$date)
Hvar <- HVaR_S(s1,VaRp,dRtn,year,s0)
s1 <- XOM$adjusted
s2 <- INTC$adjusted
dRtn <- 5                                #horizon for day,eg:5 day VaR
year <- 5                                #window length, 5 years
par1 <- winEstGBM(s1,dRtn,year)          #estimated mu and sigma of stock price
# historical VaR&ES
source("../code/stock/HVaR.R")        #for individual stock & portfolio1 two stocks
source("../code/stock/HES.R")         #for individual stock & portfolio1 two stocks
source("../code/Option_HVaR.R")       #for portfolio2 stock+options
# monte carlo VaR&ES
source("../code/stock/MC_update.R")  #for individual stock
source("../code/corrgbmsampset.R")   #for portfolio1 two stocks
source("../code/Option_MVaR.R")      #for portfolio2 stock+options
# historical VaR&ES
source("../code/stock/HVaR.R")        #for individual stock & portfolio1 two stocks
source("../code/stock/HES.R")         #for individual stock & portfolio1 two stocks
source("../code/Option_HVaR.R")       #for portfolio2 stock+options
# monte carlo VaR&ES
source("../code/stock/MC_update.R")  #for individual stock
source("../code/corrgbmsampset.R")   #for portfolio1 two stocks
source("../code/Option_MCVaR.R")      #for portfolio2 stock+options
# historical VaR&ES
source("../code/stock/HVaR.R")        #for individual stock & portfolio1 two stocks
source("../code/stock/HES.R")         #for individual stock & portfolio1 two stocks
source("../code/Option_HVaR.R")       #for portfolio2 stock+options
# monte carlo VaR&ES
source("../code/stock/MC_update.R")  #for individual stock
source("../code/corrgbmsampset.R")   #for portfolio1 two stocks
source("../code/Option_MCVaR.R")      #for portfolio2 stock+options
# Parametric VaR&ES
source("../code/stock/gbmVaR.R")         #for individual stock
source("../code/stock/gbmES.R")          #for individual stock
source("../code/stocks_parametricVaR.R") #for portfolio1 two stocks
source("../code/Option_ParametricVaR.R") #for portfolio2 stock+options
# plot graph
source("../code/plotGraph.R")
#others
source("../doc/calculation_measure.R")
source("../code/BlackScholesOption.R")
# Backtest
source("../code/BackTest.R")
s1 <- XOM$adjusted
s2 <- INTC$adjusted
dRtn <- 5                                #horizon for day,eg:5 day VaR
year <- 5                                #window length, 5 years
par1 <- winEstGBM(s1,dRtn,year)          #estimated mu and sigma of stock price
XOM <- tq_get("XOM", get = "stock.prices",from="1990-01-01")
library(ggplot2)
library(MASS)
library(quantmod)
if (!require("quantmod")) {
install.packages("quantmod")
library(quantmod)
}
if (!require("tidyquant")) {
install.packages("tidyquant")
library(tidyquant)
}
XOM <- tq_get("XOM", get = "stock.prices",from="1990-01-01")
XOM <- XOM[order(XOM$date,decreasing = T),]
INTC <- tq_get("INTC", get = "stock.prices",from="1990-01-01")
INTC <- INTC[order(INTC$date,decreasing = T),]
s1 <- XOM$adjusted
s2 <- INTC$adjusted
dRtn <- 5                                #horizon for day,eg:5 day VaR
year <- 5                                #window length, 5 years
par1 <- winEstGBM(s1,dRtn,year)          #estimated mu and sigma of stock price
par2 <- winEstGBM(s2,dRtn,year)
s0 <- 10000                              #$10,000 dollar position each day
VaRp <- 0.99
ESp <- 0.95
npaths <- 10000
# historical VaR&ES
Hvar <- HVaR_S(s1,VaRp,dRtn,year,s0)
Hes <- ES_S(s1,ESp,dRtn,year,s0)
plotGraph(Hvar,XOM$date)
plotGraph(Hes,XOM$date)
# paramentric VaR
GVaR <- gbmVaR(s0,par1$mu_gbm,par1$sigma_gbm,VaRp,dRtn)
GES <- gbmES(s0,par1$mu_gbm,par1$sigma_gbm,ESp,dRtn)
plotGraph(GVaR,XOM$date)
plotGraph(GES,XOM$date)
# Monte Carlo VaR
MVaR <- MCVaR(s0, par1$mu_gbm, par1$sigma_gbm, VaRp, npaths,year,dRtn)
MES <- MCES(s0, par1$mu_gbm, par1$sigma_gbm, ESp, npaths,year,dRtn)
plotGraph(MVaR,XOM$date)
plotGraph(MES,XOM$date)
# This part is allowed to set arbitrary inputs
source("../code/portfolio_value.R")
prices <- comb.col(s1,s2)
positions <- c("long","long")
wgt <- c(0.6,0.4)
v0 <- 10000
# wgt <- c(156/(156+200),200/(156+200))
# price_date <- cbind.data.frame(XOM$date,prices)
# colnames(price_date) <- c("date","s1","s2")
port_value <- portfolio_px(prices,wgt,positions,v0)
#estimated parameters of whole portfolio
port_par1 <- winEstGBM(port_value,dRtn,year)
#estimated parameters of each part and covariance matrix in portfolio
port_par2 <- winEstGBM2(prices,dRtn,year)
shares <- v0*wgt/prices[1,]      #shares number of s1,s2 (notes:set shares number using the newest price)
s0 <- prices[1,]                 #price at start day(eg,1997-01-01)
mu <- port_par2$mu_gbm
#estimated parameters of each part and covariance matrix in portfolio
port_par2 <- winEstGBM2(prices,dRtn,year)
# This part is allowed to set arbitrary inputs
source("../code/portfolio_value.R")
prices <- comb.col(s1,s2)
positions <- c("long","long")
wgt <- c(0.6,0.4)
v0 <- 10000
# wgt <- c(156/(156+200),200/(156+200))
# price_date <- cbind.data.frame(XOM$date,prices)
# colnames(price_date) <- c("date","s1","s2")
# This part is allowed to set arbitrary inputs
source("../code/portfolio_value.R")
prices <- comb.col(s1,s2)
positions <- c("long","long")
wgt <- c(0.6,0.4)
v0 <- 10000
# wgt <- c(156/(156+200),200/(156+200))
# price_date <- cbind.data.frame(XOM$date,prices)
# colnames(price_date) <- c("date","s1","s2")
port_value <- portfolio_px(prices,wgt,positions,v0)
#estimated parameters of whole portfolio
port_par1 <- winEstGBM(port_value,dRtn,year)
#estimated parameters of each part and covariance matrix in portfolio
port_par2 <- winEstGBM2(prices,dRtn,year)
shares <- v0*wgt/prices[1,]      #shares number of s1,s2 (notes:set shares number using the newest price)
s0 <- prices[1,]                 #price at start day(eg,1997-01-01)
mu <- port_par2$mu_gbm
# calculate parameter for stocks/portfolio return
source("../code/parameter/winEstGBM.R")
source("../code/parameter/expEstGBM.R")
source("../code/parameter/winEstGBM2.R") #estimated parameters and rho for two stocks
port_value <- portfolio_px(prices,wgt,positions,v0)
#estimated parameters of whole portfolio
port_par1 <- winEstGBM(port_value,dRtn,year)
#estimated parameters of each part and covariance matrix in portfolio
port_par2 <- winEstGBM2(prices,dRtn,year)
shares <- v0*wgt/prices[1,]      #shares number of s1,s2 (notes:set shares number using the newest price)
s0 <- prices[1,]                 #price at start day(eg,1997-01-01)
mu <- port_par2$mu_gbm
sigma <- port_par2$sigma_gbm
rho <- port_par2$rho
# Historical VaR&ES
port_HVaR <- HVaR_S(port_value,VaRp,dRtn,year,v0)
port_HES <- ES_S(port_value,ESp,dRtn,year,v0)
#here,using XOM date for plot because the date of portfolio is same with XOM and INTC
plotGraph(port_HVaR,XOM$date)
plotGraph(port_HES,XOM$date)
# Parametric VaR1(&ES): portfolio follows GBM
GVaR_p1 <- gbmVaR(v0,port_par1$mu_gbm,port_par1$sigma_gbm,VaRp,dRtn)
GES_p1 <- gbmES(v0,port_par1$mu_gbm,port_par1$sigma_gbm,ESp,dRtn)
plotGraph(GVaR_p1,XOM$date)
plotGraph(GES_p1,XOM$date)
# Parametric VaR2: underlying stock follows GBM
PVaR_p1 <- parametricVaR(shares,s0,mu,sigma,rho,VaRp,dRtn,v0)
plotGraph(rev(PVaR_p1),INTC$date)
# Monte Carlo VaR1: portfolio follows GBM
port_MVaR <- MCVaR(v0, port_par1$mu_gbm, port_par1$sigma_gbm, VaRp, npaths,year,dRtn)
port_MES <- MCES(v0, port_par1$mu_gbm, port_par1$sigma_gbm, ESp, npaths,year,dRtn)
plotGraph(port_MVaR,XOM$date)
plotGraph(port_MES,XOM$date)
# Monte Carlo (underlying stock follows GBM)
MCVaR_p1 <- MCVaR_p(v0, port_par2$mu_gbm, port_par2$sigma, port_par2$rho,shares,VaRp, npaths,year,dRtn)
source("../code/BTplot.R")
source("../code/Loss.R")
#Backtest of parametric VaR
GBT<-BackTest(s1,GVaR,1,10000)
BTplot(GBT,XOM$date)
GLoss<-Loss(s1,GVaR,1,10000)
plot(XOM$date[1:length(GLoss[,1])],GLoss[,1],type="l",col="2",xlab = "Date",ylab = "")
lines(XOM$date[1:length(GLoss[,1])],GLoss[,2],y=,type="l",col="3")
legend("topright",legend=c("Actual loss","vaR"),col=2:3,lty=1)
#Backtest of Monte Carlo VaR
MBT<-BackTest(s1,MVaR,1,10000)
BTplot(MBT,XOM$date)
MLoss<-Loss(s1,MVaR,1,10000)
plot(XOM$date[1:length(GLoss[,1])],MLoss[,1],type="l",col="2",xlab = "Date",ylab = "")
lines(XOM$date[1:length(GLoss[,1])],MLoss[,2],y=,type="l",col="3")
legend("topright",legend=c("Actual loss","vaR"),col=2:3,lty=1)
OP_HVaR <- Option_HVaR(price1, price1, year, rf, nstocks, iv1, strike1, maturity1,
iv2, strike2, maturity2, ncalls, nputs,
VaRp, horizon)
wgt_s <- 0.9                            #weights of stocks in portfolio
wgt_call <- 0.05                        #weights of call option in portfolio
wgt_put <- 0.05                         #weights of put option in portfolio
v0 <- 10000
VaRp <- 0.99
horizon <- 5
year <- 1
rf <- 0.005
option <- function(option,price){
option <- option[,c(1,ncol(option))]
colnames(option) <- c("date","Implied_Vol")
option$date <- as.Date(option$date,"%m/%d/%y")
px <- price[,c(1,ncol(price))]
option_px <- merge(transform(px,date),transform(option,date))
return(option_px)
}
option1 <- option(xom.option,XOM)
library(ggplot2)
library(MASS)
library(quantmod)
if (!require("quantmod")) {
install.packages("quantmod")
library(quantmod)
}
if (!require("tidyquant")) {
install.packages("tidyquant")
library(tidyquant)
}
XOM <- tq_get("XOM", get = "stock.prices",from="1990-01-01")
XOM <- XOM[order(XOM$date,decreasing = T),]
INTC <- tq_get("INTC", get = "stock.prices",from="1990-01-01")
INTC <- INTC[order(INTC$date,decreasing = T),]
imp_vol <- read.csv("../data/volatility.csv")
imp_vol$Date <- as.Date(imp_vol$Date,"%m/%d/%Y")
intc.option <- read.csv("~/GitHub/risk-mgmt-GroupX/data/intc-option.csv")
xom.option <- read.csv("~/GitHub/risk-mgmt-GroupX/data/xom-option.csv")
# calculate parameter for stocks/portfolio return
source("../code/parameter/winEstGBM.R")
source("../code/parameter/expEstGBM.R")
source("../code/parameter/winEstGBM2.R") #estimated parameters and rho for two stocks
# historical VaR&ES
source("../code/stock/HVaR.R")        #for individual stock & portfolio1 two stocks
source("../code/stock/HES.R")         #for individual stock & portfolio1 two stocks
source("../code/Option_HVaR.R")       #for portfolio2 stock+options
# monte carlo VaR&ES
source("../code/stock/MC_update.R")  #for individual stock
source("../code/corrgbmsampset.R")   #for portfolio1 two stocks
source("../code/Option_MCVaR.R")      #for portfolio2 stock+options
# Parametric VaR&ES
source("../code/stock/gbmVaR.R")         #for individual stock
source("../code/stock/gbmES.R")          #for individual stock
source("../code/stocks_parametricVaR.R") #for portfolio1 two stocks
source("../code/Option_ParametricVaR.R") #for portfolio2 stock+options
# plot graph
source("../code/plotGraph.R")
source("../code/BTplot.R")
#others
source("../doc/calculation_measure.R")
source("../code/BlackScholesOption.R")
# Backtest
source("../code/BackTest.R")
source("../code/Loss.R")
s1 <- XOM$adjusted
s2 <- INTC$adjusted
dRtn <- 5                                #horizon for day,eg:5 day VaR
year <- 5                                #window length, 5 years
par1 <- winEstGBM(s1,dRtn,year)          #estimated mu and sigma of stock price
par2 <- winEstGBM(s2,dRtn,year)
s0 <- 10000                              #$10,000 dollar position each day
VaRp <- 0.99
ESp <- 0.95
npaths <- 10000
port_value <- portfolio_px(prices,wgt,positions,v0)
#estimated parameters of whole portfolio
port_par1 <- winEstGBM(port_value,dRtn,year)
#estimated parameters of each part and covariance matrix in portfolio
port_par2 <- winEstGBM2(prices,dRtn,year)
shares <- v0*wgt/prices[1,]      #shares number of s1,s2 (notes:set shares number using the newest price)
s0 <- prices[1,]                 #price at start day(eg,1997-01-01)
mu <- port_par2$mu_gbm
sigma <- port_par2$sigma_gbm
rho <- port_par2$rho
# Historical VaR&ES
port_HVaR <- HVaR_S(port_value,VaRp,dRtn,year,v0)
port_HES <- ES_S(port_value,ESp,dRtn,year,v0)
#here,using XOM date for plot because the date of portfolio is same with XOM and INTC
plotGraph(port_HVaR,XOM$date)
plotGraph(port_HES,XOM$date)
# Parametric VaR1(&ES): portfolio follows GBM
GVaR_p1 <- gbmVaR(v0,port_par1$mu_gbm,port_par1$sigma_gbm,VaRp,dRtn)
GES_p1 <- gbmES(v0,port_par1$mu_gbm,port_par1$sigma_gbm,ESp,dRtn)
plotGraph(GVaR_p1,XOM$date)
plotGraph(GES_p1,XOM$date)
# Parametric VaR2: underlying stock follows GBM
PVaR_p1 <- parametricVaR(shares,s0,mu,sigma,rho,VaRp,dRtn,v0)
plotGraph(rev(PVaR_p1),INTC$date)
# Monte Carlo VaR1: portfolio follows GBM
port_MVaR <- MCVaR(v0, port_par1$mu_gbm, port_par1$sigma_gbm, VaRp, npaths,year,dRtn)
port_MES <- MCES(v0, port_par1$mu_gbm, port_par1$sigma_gbm, ESp, npaths,year,dRtn)
plotGraph(port_MVaR,XOM$date)
plotGraph(port_MES,XOM$date)
# Monte Carlo (underlying stock follows GBM)
# MCVaR_p1 <- MCVaR_p(v0, port_par2$mu_gbm, port_par2$sigma, port_par2$rho,shares,VaRp, npaths,year,dRtn)
# plotGraph(MCVaR_p1,INTC$date)
plotGraph(PVaR_p1,INTC$date)
port_HVaR <- HVaR_S(port_value,VaRp,dRtn,year,v0)
port_HES <- ES_S(port_value,ESp,dRtn,year,v0)
#here,using XOM date for plot because the date of portfolio is same with XOM and INTC
plotGraph(port_HVaR,XOM$date)
plotGraph(port_HES,XOM$date)
# Parametric VaR1(&ES): portfolio follows GBM
GVaR_p1 <- gbmVaR(v0,port_par1$mu_gbm,port_par1$sigma_gbm,VaRp,dRtn)
GES_p1 <- gbmES(v0,port_par1$mu_gbm,port_par1$sigma_gbm,ESp,dRtn)
plotGraph(GVaR_p1,XOM$date)
plotGraph(GES_p1,XOM$date)
# Parametric VaR2: underlying stock follows GBM
PVaR_p1 <- parametricVaR(shares,s0,mu,sigma,rho,VaRp,dRtn,v0)
plotGraph(PVaR_p1,INTC$date)
wgt_s <- 0.9                            #weights of stocks in portfolio
wgt_call <- 0.05                        #weights of call option in portfolio
wgt_put <- 0.05                         #weights of put option in portfolio
v0 <- 10000
VaRp <- 0.99
horizon <- 5
year <- 1
rf <- 0.005
option <- function(option,price){
option <- option[,c(1,ncol(option))]
colnames(option) <- c("date","Implied_Vol")
option$date <- as.Date(option$date,"%m/%d/%y")
px <- price[,c(1,ncol(price))]
option_px <- merge(transform(px,date),transform(option,date))
return(option_px)
}
option1 <- option(xom.option,XOM)
option2 <- option(intc.option,INTC)
price1 <- option1$adjusted
maturity1 <- 252                         #1 year
maturity2 <- 252                         #1 year
strike1 <- price1
strike2 <- price1
iv1 <- option1$Implied_Vol
iv2 <- option1$Implied_Vol
putt <- Put(price1, strike1, rf, maturity1-horizon, iv1)
calll <- Call(price1, strike2, rf, maturity2-horizon, iv2)
nstocks <- wgt_s*v0/option1$adjusted[1]
ncalls <- 0.05*v0/calll[1]
nputs <- 0.05*v0/putt[1]
mu <- par1$mu_gbm
sigma <- par1$sigma_gbm
npath <- 1000
price0<- price1[length(price1)]
s0 <- 10000
# Historical VaR&ES
OP_HVaR <- Option_HVaR(price1, price1, year, rf, nstocks, iv1, strike1, maturity1,
iv2, strike2, maturity2, ncalls, nputs,
VaRp, horizon)
plotGraph(OP_HVaR,option1$date)
# Parametric
# s0 <- price1
OP_PVaR <- Option_ParametricVaR(price0,s0, mu, sigma, rf, nstocks, iv1, maturity1,
iv2, maturity2, ncalls, nputs,
VaRp, horizon)
plotGraph(OP_PVaR,option1$date)
# Monte Carlo VaR&ES
OP_MCVaR <- Option_MCVaR(s0, mu, sigma, rf, nstocks, iv1, maturity1,
iv2, maturity2, ncalls, nputs,VaRp, horizon, npath)
plotGraph(OP_MCVaR,option1$date)
Option_HES <- function(s0, price, year, rf, nstocks, iv1, strike1, maturity1,
iv2, strike2, maturity2, ncalls, nputs,
ESp, horizon){
vtStock <- price * nstocks
putt <- Put(price, strike1, rf, maturity1-horizon, iv1)
calll <- Call(price, strike2, rf, maturity2-horizon, iv2)
vtPut <- nputs * putt
vtCall <- ncalls * calll
vt <- vtStock + vtPut + vtCall
rtn <- -diff(log(vt), horizon)
N <- length(rtn)
n <- year*252
temp <- rep(NA, N-n)
v0Stock <- s0 * nstocks
put0 <- Put(s0, strike1, rf, maturity1, iv1)
call0 <- Call(s0, strike2, rf, maturity2, iv2)
v0Put <- nputs * put0
v0Call <- ncalls * call0
v0 <- v0Stock + v0Put + v0Call
ES <- NA
for(i in 1:(N-n)){
temp[i] <- quantile(rtn[i:(i+n)],1-ESp,na.rm = T)
ES[i] <- v0*(1-exp(mean(rtn[which(rtn < temp[i])])))
}
return (VaR)
}
OP_HES <- Option_HVaR(price1, price1, year, rf, nstocks, iv1, strike1, maturity1,
iv2, strike2, maturity2, ncalls, nputs,
ESp, horizon)
plotGraph(OP_HES,option1$date)
plotGraph(OP_HVaR,option1$date)
plotGraph(OP_HES,option1$date)
