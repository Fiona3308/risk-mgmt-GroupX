pnorm(0.01)
qnorm(0.95)
dRtn <- -diff(log(XOM$PX_LAST),5)
for (i in length(XOM$PX_LAST)){
rtn[i] <- log(XOM$PX_LAST)[i]-log(XOM$PX_LAST)[i+4]
}
rtn
rtn <- c()
for (i in length(XOM$PX_LAST)){
rtn[i] <- log(XOM$PX_LAST)[i]-log(XOM$PX_LAST)[i+4]
}
logr <- XOM$PX_LAST
logr[1]
logr[5]
# monte carlo VaR/ES
source("../code/MCVAR & MCES.R")
ll <- Monte_VaR(100000,m$mu_gbm,m$sigma_gbm,0.99,1/252,1000)
# monte carlo VaR/ES
source("../code/MCVAR & MCES.R")
ll <- Monte_VaR(100000,m$mu_gbm,m$sigma_gbm,0.99,1/252,1000)
ll <- Monte_VaR(100000,m$mu_gbm,m$sigma_gbm,0.99,5/252,100)
plot(ll,type="l")
# monte carlo VaR/ES
source("../code/MCVAR & MCES.R")
ll <- Monte_VaR(100000,m$mu_gbm,m$sigma_gbm,0.99,5/252,100)
ll <- Monte_VaR(10000,m$mu_gbm,m$sigma_gbm,0.99,5/252,100)
plot(ll,type="l")
# monte carlo VaR/ES
source("../code/MCVAR & MCES.R")
ll <- Monte_VaR(10000,m$mu_gbm,m$sigma_gbm,0.99,5/252,100)
plot(ll,type="l")
ll <- Monte_VaR(10000,m$mu_gbm,m$sigma_gbm,0.99,5/252,10000)
# monte carlo VaR/ES
source("../code/MCVAR & MCES.R")
ll <- Monte_VaR(10000,m$mu_gbm,m$sigma_gbm,0.99,5/252,10)
plot(ll,type="l")
ll <- Monte_VaR(10000,m$mu_gbm,m$sigma_gbm,0.99,5/252,100)
plot(ll,type="l")
wgt <- c("0.4","0.6")
length(wgt)
library(quantmod)
library(ggplot2)
# We assume the data of this project is ordered by date from lateset to oldest
XOM <- read.csv("../data/XOM-bloomberg.csv")
INTC <- read.csv("../data/INTC-bloomberg.csv")
XOM$Dates <- as.Date(XOM$Dates,"%m/%d/%Y")
INTC$Dates <- as.Date(INTC$Dates,"%m/%d/%Y")
p_price <- cbind(XOM$PX_LAST,XOM$PX_LAST)
length(p_price)
positins <- c("long","long","long")
pos <- c("long","long","long")
pos
pos[1]
wgt[2]
wgt[2] <- -wgt[2]
m <- -wgt[2]
wgt[2] <- (-1)*wgt[2]
(-1)*wgt[2]
wgt[2]
class(wgt[2])
wgt <- c(0.4,0.6)
wgt
wgt[2] <- (-1)*wgt[2]
wgt[2]
wgt
length(pos)
p_price[1,]*wgt
sum(p_price[1,]*wgt)
wgt <- c(0.4,0.6)
p_price <- cbind(XOM$PX_LAST,XOM$PX_LAST)
pos <- c("long","long")
portfolio_px <- function(prices,wgts,positions){
port_px <- NA
for(i in 2:length(positions)){
if (positions[i]=="long")wgts[i]<- (-1)*wgts[i]
}
for(j in 1:length(prices)){
port_px[j] <- sum(prices[j,]*wgts)
}
}
portfolio_px(p_price,wgt,pos)
length(p_price)
p_price[1,]
View(p_price)
p_price <- cbind(XOM$PX_LAST,INTC$PX_LAST)
View(p_price)
comb.col <- function(dat1, dat2) {
n.row <- min(length(dat1),length(dat2))
length(dat1) <- n.row
length(dat2) <- n.row
cbind(dat1, dat2)
}
comb.col(XOM$PX_LAST,INTC$PX_LAST)
portfolio_px(p_price,wgt,pos)
wgt <- c(0.4,0.6)
p_price <- comb.col(XOM$PX_LAST,INTC$PX_LAST)
pos <- c("long","long")
portfolio_px <- function(prices,wgts,positions){
port_px <- NA
for(i in 2:length(positions)){
if (positions[i]=="long")wgts[i]<- (-1)*wgts[i]
}
for(j in 1:length(prices)){
port_px[j] <- sum(prices[j,]*wgts)
}
}
portfolio_px(p_price,wgt,pos)
View(p_price)
p_price[i,]
p_price[1,]
length(p_price)
portfolio_px <- function(prices,wgts,positions){
port_px <- NA
for(i in 2:length(positions)){
if (positions[i]=="long")wgts[i]<- (-1)*wgts[i]
}
for(j in 1:nrow(prices)){
port_px[j] <- sum(prices[j,]*wgts)
}
}
portfolio_px(p_price,wgt,pos)
mm <- portfolio_px(p_price,wgt,pos)
portfolio_px <- function(prices,wgts,positions){
port_px <- NA
for(i in 2:length(positions)){
if (positions[i]=="long")wgts[i]<- (-1)*wgts[i]
}
for(j in 1:nrow(prices)){
port_px[j] <- sum(prices[j,]*wgts)
}
}
mm <- portfolio_px(p_price,wgt,pos)
View(portfolio_px(p_price,wgt,pos))
port_px <- NA
portfolio_px <- function(prices,wgts,positions){
for(i in 2:length(positions)){
if (positions[i]=="long")wgts[i]<- (-1)*wgts[i]
}
for(j in 1:nrow(prices)){
port_px[j] <- sum(prices[j,]*wgts)
}
}
mm <- portfolio_px(p_price,wgt,pos)
p_price[1,]
(-1)*wgts[i]
wgts <- c(0.4,0.6)
(-1)*wgts[i]
portfolio_px <- function(prices,wgts,positions){
port_px <- NA
for(i in 2:length(positions)){
if (positions[i]=="long")wgts[i]<- (-1)*wgts[i]
}
for(j in 1:nrow(prices)){
port_px[j] <- sum(prices[j,]*wgts)
}
}
(-1)*wgts[i]
length(pos)
i <- 1
(-1)*wgts[i]
i <- 2
for(i in 2:length(positions)){
if (positions[i]=="long")wgts[i]<- (-1)*wgts[i]
}
positions <- c("long","long")
for(i in 2:length(positions)){
if (positions[i]=="long")wgts[i]<- (-1)*wgts[i]
}
(-1)*wgts[i]
wgts[i]<- (-1)*wgts[i]
wgts[i]
portfolio_px <- function(prices,wgts,positions){
port_px <- NA
for(i in 2:length(positions)){
if (positions[i]=="long"){
wgts[i]<- (-1)*wgts[i]
}
for(j in 1:nrow(prices)){
port_px[j] <- sum(prices[j,]*wgts)
}
}
}
mm <- portfolio_px(p_price,wgt,pos)
positions
positions[2]
positions <- c("long","long2")
positions[2]
positions <- c("long","long")
wgts <- c(0.4,0.6)
wgts[i] <- (-1)*wgts[2]
wgts[2]
wgts <- c(0.4,0.6)
wgts[2]
wgts[2] <- (-1)*wgts[2]
wgts[2]
wgts <- c(0.4,0.6.0.8)
positions <- c("long","long","long")
wgts <- c(0.4,0.6,0.8)
positions <- c("long","long","long")
if (positions[i]=="long"){
wgts[i]<- (-1)*wgts[i]
}
wgts
for(i in 2:length(positions)){
if (positions[i]=="long"){
wgts[i]<- (-1)*wgts[i]
}
}
wgts
length(positions)
for(i in 2:length(positions)){
if (positions[i] %in% "long"){
wgts[i]<- (-1)*wgts[i]
}
}
wgts
wgts
wgts
wgts
positions <- c("long","long2","long3")
for(i in 2:length(positions)){
if (positions[i] %in% "long"){
wgts[i]<- (-1)*wgts[i]
}
}
wgts
for(i in 2:3)
}
for(i in 2:3){
if (positions[i] %in% "long"){
wgts[i]<- (-1)*wgts[i]
}
}
wgts
for(i in positions){
if (positions[i] %in% "long"){
wgts[i]<- (-1)*wgts[i]
}
}
wgts
if (positions[i] %in% "long"){
wgts[i]<- (-1)*wgts[i]
}
if (positions[3] %in% "long"){
wgts[3] <- -wgts[3]
}
wgts
wgts[3]
if (positions[3] %in% long){
wgts[3] <- -wgts[3]
}
if (positions[3] %in% "long"){
wgts[3] <- -wgts[3]
}
wgts <- c(0.4,0.6,0.8)
if (positions[3] %in% "long"){
wgts[3] <- -wgts[3]
}
wgts
wgts <- c(0.4,0.6,0.8)
if (positions[3] %in% "long"){
wgts[3] <- wgts[3]*(-1)
}
wgts
wgts
positions <- c("long","long2","long3")
if (positions[3] %in% "long"){
wgts[3] <- wgts[3]*(-1)
}
wgts
if (positions[3] == "long"){
wgts[3] <- wgts[3]*(-1)
}
wgts
wgts[3]
wgts[3]*(-1)
wgts <- c(0.4,0.6,0.8)
wgts
if (positions[3] == "long"){
wgts[3] <- wgts[3]*(-1)
}
wgts
positions <- c("long","long2","long3")
length(positions)
wgts <- c(0.4,0.6,0.8)
positions <- c("long","long2","long3")
for(i in 2:length(positions)){
if (positions[i] == "long"){
wgts[i] <- (-1)*wgts[i]
}
}
positions <- c("long","long","long")
for(i in 2:length(positions)){
if (positions[i] == "long"){
wgts[i] <- (-1)*wgts[i]
}
}
wgts
wgts <- c(0.4,0.6)
p_price <- comb.col(XOM$PX_LAST,INTC$PX_LAST)
positions <- c("long","long")
portfolio_px <- function(prices,wgts,positions){
port_px <- NA
for(i in 2:length(positions)){
if (positions[i] == "long"){
wgts[i] <- (-1)*wgts[i]
}
for(j in 1:nrow(prices)){
port_px[j] <- sum(prices[j,]*wgts)
}
}
}
mm <- portfolio_px(p_price,wgt,pos)
port_px
wgts <- c(0.4,0.6)
p_price <- comb.col(XOM$PX_LAST,INTC$PX_LAST)
positions <- c("long","long")
port_px <- NA
portfolio_px <- function(prices,wgts,positions){
for(i in 2:length(positions)){
if (positions[i] == "long"){
wgts[i] <- (-1)*wgts[i]
}
for(j in 1:nrow(prices)){
port_px[j] <- sum(prices[j,]*wgts)
}
}
}
mm <- portfolio_px(p_price,wgt,positions)
port_px
prices <- p_price
for(i in 2:length(positions)){
if (positions[i] == "long"){
wgts[i] <- (-1)*wgts[i]
}
}
wgts <- c(0.4,0.6)
p_price <- comb.col(XOM$PX_LAST,INTC$PX_LAST)
positions <- c("long","long")
portfolio_px <- function(prices,wgts,positions){
port_px <- NA
for(i in 2:length(positions)){
if (positions[i] == "long"){
wgts[i] <- (-1)*wgts[i]
}
for(j in 1:nrow(prices)){
port_px[j] <- sum(prices[j,]*wgts)
}
}
return(port_px)
}
mm <- portfolio_px(p_price,wgt,positions)
mm
View(mm)
View(prices)
sum(p_price[1,]*wgts)
nrow(prices)
wgts <- c(0.4,-0.6)
sum(p_price[1,]*wgts)
source("../code/portfolio_price.R")
#
options[, c("symbol", "type", "expiry", "strike", "premium", "bid", "ask", "open.interest", "retrieved")]
library(RCurl)
library(jsonlite)
library(plyr)
fixJSON <- function(json){
gsub('([^,{:]+):', '"\\1":', json)
}
URL1 = 'http://www.google.com/finance/option_chain?q=%s%s&output=json'
URL2 = 'http://www.google.com/finance/option_chain?q=%s%s&output=json&expy=%d&expm=%d&expd=%d'
getOptionQuotes <- function(symbol, exchange = NA) {
exchange = ifelse(is.na(exchange), "", paste0(exchange, ":"))
#
url = sprintf(URL1, exchange, symbol)
#
chain = tryCatch(fromJSON(fixJSON(getURL(url))), error = function(e) NULL)
#
if (is.null(chain)) stop(sprintf("retrieved document is not JSON. Try opening %s in your browser.", url))
#
# Iterate over the expiry dates
#
options = mlply(chain$expirations, function(y, m, d) {
url = sprintf(URL2, exchange, symbol, y, m, d)
expiry = fromJSON(fixJSON(getURL(url)))
#
expiry$calls$type = "Call"
expiry$puts$type  = "Put"
#
prices = rbind(expiry$calls, expiry$puts)
#
prices$expiry = sprintf("%4d-%02d-%02d", y, m, d)
prices$underlying.price = expiry$underlying_price
#
prices$retrieved = Sys.time()
#
prices
})
#
options = options[sapply(options, class) == "data.frame"]
#
# Concatenate data for all expiration dates and add in symbol column
#
options = cbind(data.frame(symbol), rbind.fill(options))
#
options = rename(options, c("p" = "premium", "b" = "bid", "a" = "ask", "oi" = "open.interest"))
#
for (col in c("strike", "premium", "bid", "ask")) options[, col] = suppressWarnings(as.numeric(options[, col]))
options[, "open.interest"] = suppressWarnings(as.integer(options[, "open.interest"]))
#
options[, c("symbol", "type", "expiry", "strike", "premium", "bid", "ask", "open.interest", "retrieved")]
}
AAPL = getOptionQuotes("AAPL")
prices <- comb.col(XOM$PX_LAST,INTC$PX_LAST)
wgt <- c(156/(156+200),200/(156+200))
positions <- c("no","no")
hvarp <- portfolio_px(prices,wgt,positions)
source("../code/portfolio_price.R")
hvarp <- portfolio_px(prices,wgt,positions)
plotGraph(hvarp,INTC$Dates)
# plot graph
source("../code/plotGraph.R")
plotGraph(hvarp,INTC$Dates)
portfolio_price <- portfolio_px(prices,wgt,positions)
port_Hvar <- HVaR_S(portfolio_price,0.99,dRtn,year)
# historical VaR/ES
source("../code/stock/HVaR.R")
port_Hvar <- HVaR_S(portfolio_price,0.99,dRtn,year)
s1 <- XOM$PX_LAST
s2 <- INTC$PX_LAST
dRtn <- 5
year <- 5
par1 <- winEstGBM(s1,dRtn,year)
library(ggplot2)
# calculate parameter for return
source("../code/parameter/winEstGBM.R")
source("../code/parameter/expEstGBM.R")
# historical VaR/ES
source("../code/stock/HVaR.R")
source("../code/stock/HES.R")
# monte carlo VaR/ES
# source("../code/stock/MCVAR & MCES.R")
source("../code/stock/MC_update.R")
source("../code/Put_MCVaR.R")
# Parametric VaR/ES
source("../code/stock/gbmVaR.R")
source("../code/stock/gbmES.R")
source("../code/parametricVaR.R")
source("../doc/calculation_measure.R")
# plot graph
source("../code/plotGraph.R")
s1 <- XOM$PX_LAST
s2 <- INTC$PX_LAST
dRtn <- 5
year <- 5
par1 <- winEstGBM(s1,dRtn,year)
par2 <- winEstGBM(s2,dRtn,year)
s0<-10000
port_Hvar <- HVaR_S(portfolio_price,0.99,dRtn,year)
port_Hvar <- HVaR_S(portfolio_price,0.99,dRtn,year,s0)
plotGraph(hvarp,INTC$Dates)
plotGraph(port_Hvar,INTC$Dates)
imp_vol <- read.csv("../data/volatility.csv")
View(imp_vol)
imp_vol$Dates <- as.Date(imp_vol$Dates,"%m/%d/%Y")
imp_vol$Date <- as.Date(imp_vol$Date,"%m/%d/%Y")
View(imp_vol)
View(XOM)
add.col<-function(df, new.col) {
n.row<-dim(df)[1]
length(new.col)<-n.row
cbind(df, new.col)
}
prices <- comb.col(imp_vol$PX_LAST,imp_vol$X12MO_PUT_IMP_VOL)
View(imp_vol)
View(INTC)
prices <- comb.col(imp_vol$PX_LAST,imp_vol$X12MO_PUT_IMP_VOL)
View(prices)
View(imp_vol)
imp_vol$Date <- c("Dates")
imp_vol
colnames(imp_vol) <- c("Dates","PX","IMP_VOL")
imp_vol
merge(imp_vol,INTC[,c(1,6)],by=Dates)
merge(imp_vol,INTC[,c(1,6)],by= "Dates")
INTC[,c(1,6)]
imp_vol
merge(imp_vol,INTC[,c(1,6)],by= "Dates",all = T)
imp_vol$Dates <- format(as.Date(imp_vol$Date,"%m/%d/%Y"))
merge(imp_vol,INTC[,c(1,6)],by= "Dates",all = T)
imp_vol$Dates <- format(index(imp_vol$Dates))
INTC$Dates <- format(index(imp_vol$Dates))
INTC$Dates <- format(index(INTC$Dates))
merge(imp_vol,INTC[,c(1,6)],by= "Dates",all = T)
View(imp_vol)
imp_vol <- read.csv("../data/volatility.csv")
View(imp_vol)
XOM <- read.csv("../data/XOM-bloomberg.csv")
INTC <- read.csv("../data/INTC-bloomberg.csv")
XOM$Dates <- as.Date(XOM$Dates,"%m/%d/%Y")
INTC$Dates <- as.Date(INTC$Dates,"%m/%d/%Y")
imp_vol$Date <- as.Date(imp_vol$Date,"%m/%d/%Y")
colnames(imp_vol) <- c("Dates","PX","IMP_VOL")
imp_vol$Date <- as.Date(imp_vol$Date,"%m/%d/%Y")
imp_vol$Dates <- format(time(imp_vol$Dates))
imp_vol
XOM <- read.csv("../data/XOM-bloomberg.csv")
INTC <- read.csv("../data/INTC-bloomberg.csv")
imp_vol <- read.csv("../data/volatility.csv")
XOM$Dates <- as.Date(XOM$Dates,"%m/%d/%Y")
INTC$Dates <- as.Date(INTC$Dates,"%m/%d/%Y")
imp_vol$Date <- as.Date(imp_vol$Date,"%m/%d/%Y")
colnames(imp_vol) <- c("Dates","PX","IMP_VOL")
